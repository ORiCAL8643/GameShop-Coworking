import { Layout, Menu, Badge } from "antd";
import type { MenuProps } from "antd";
import { Outlet, useNavigate, useLocation } from "react-router-dom";
import { PlusOutlined } from "@ant-design/icons";
import { useEffect, useMemo, useState } from "react";
import AdminPageBadge from "./AdminPageBadge";
import { useReportNewCount } from "../hooks/useReportNewCount"; // üëà ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ hook ‡∏ô‡∏µ‡πâ

const { Sider } = Layout;
type GroupItem = Required<MenuProps>["items"][number];

const Sidebar = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const reportCount = useReportNewCount();

  // ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô "‡∏Å‡∏•‡∏∏‡πà‡∏°" (‡∏°‡∏µ children)
  const rootSubmenuKeys = useMemo(
    () => ["/information", "/category", "/Admin"],
    []
  );

  // ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà (‡∏ï‡∏≤‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô)
  const selectedKey = location.pathname;

  const computeOpenKeys = (path: string) =>
    rootSubmenuKeys.filter((k) => path.startsWith(k));

  const [openKeys, setOpenKeys] = useState<string[]>(computeOpenKeys(selectedKey));

  useEffect(() => {
    setOpenKeys(computeOpenKeys(selectedKey));
  }, [selectedKey]);

  const onOpenChange: MenuProps["onOpenChange"] = (keys) => {
    setOpenKeys(keys as string[]);
  };

  const items: GroupItem[] = [
    { key: "/home", label: "‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å" },
    { key: "/request", label: "‡∏£‡∏µ‡πÄ‡∏Ñ‡∏ß‡∏™‡πÄ‡∏Å‡∏°" },
    { key: "/requestinfo", label: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏µ‡πÄ‡∏Ñ‡∏ß‡∏™" },
    {
      key: "/information",
      label: "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°",
      children: [
        { key: "/information/Add", label: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°", icon: <PlusOutlined /> },
        { key: "/information/Edit", label: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°", icon: <PlusOutlined /> },
      ],
    },
    {
      key: "/category",
      label: "‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",
      children: [
        { key: "/category/Community", label: "‡∏ä‡∏∏‡∏°‡∏ä‡∏ô", icon: <PlusOutlined /> },
        { key: "/category/Payment", label: "‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", icon: <PlusOutlined /> },
      ],
    },
    { key: "/workshop", label: "Workshop" },
    { key: "/promotion", label: "Promotion" },
    { key: "/refund", label: "‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" },
    { key: "/report", label: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤" },
    {
      key: "/Admin",
      label: "Admin",
      children: [
        {
          key: "/Admin/Page",
          icon: <PlusOutlined />,
          label: (
            <span style={{ display: "flex", alignItems: "center", gap: 4 }}>
              Page
              {reportCount > 0 && (
                <Badge count={reportCount} size="small" offset={[4, -2]} />
              )}
            </span>
          ),
        },
        {
          key: "/Admin/PaymentReviewPage",
          label: "PaymentReview",
          icon: <PlusOutlined />,
        },
        { key: "/Admin/RolePage", label: "Role", icon: <PlusOutlined /> },
      ],
    },
  ];

  return (
    <Layout style={{ minHeight: "100vh" }}>
      <Sider theme="dark" width={220}>
        <div
          style={{
            color: "#9254de",
            fontSize: 20,
            textAlign: "center",
            padding: "16px 0",
            fontWeight: 600,
          }}
        >
          GAME STORE
        </div>

        <Menu
          theme="dark"
          mode="inline"
          items={items}
          selectedKeys={[selectedKey]}
          openKeys={openKeys}
          onOpenChange={onOpenChange}
          onClick={({ key }) => navigate(String(key))}
        />
      </Sider>

      {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å */}
      <Outlet />
    </Layout>
  );
};

export default Sidebar;
