import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Card, Form, Input, Button, Select, Upload, message } from "antd";
import { UploadOutlined } from "@ant-design/icons";
import { createReport } from "../../services/Report";
import { useAuth } from "../../context/AuthContext";

export default function ReportPage() {
  const [form] = Form.useForm();
  const [fileList, setFileList] = useState<any[]>([]);
  const navigate = useNavigate();
  const { id: userId } = useAuth();

  // TODO: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Å‡∏°‡∏à‡∏≤‡∏Å UI ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  const DEFAULT_GAME_ID = 1;

  const PAGE_BG =
    "linear-gradient(135deg, #0b0a14 0%, #15122a 45%, #1b1740 100%)";
  const PURPLE = "#9254de";

  const handleSubmit = async (values: any) => {
    try {
      if (!userId) {
        message.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô");
        return;
      }

      const files: File[] = (fileList || [])
        .map((f: any) => f?.originFileObj)
        .filter(Boolean);

      await createReport({
        title: values.title,
        description: values.description,
        user_id: userId,          // ‚úÖ ‡πÉ‡∏ä‡πâ snake_case ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á backend
        game_id: DEFAULT_GAME_ID,
        status: "open",
        files,
      });

      message.success("‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      form.resetFields();
      setFileList([]);
      navigate("/report/success", { state: { title: values.title } });
    } catch (e: any) {
      const apiMsg =
        e?.response?.data?.error ||
        e?.message ||
        "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô";
      message.error(apiMsg);
    }
  };

  return (
    <div
      className="report-page"
      style={{
        width: "100%",
        minHeight: "100vh",
        background: PAGE_BG,
        padding: "40px 16px",
        display: "flex",
        justifyContent: "center",
        alignItems: "flex-start",
        color: "#fff",
      }}
    >
      <Card
        bordered={false}
        style={{ width: "100%", maxWidth: 720 }}
        title={
          <div>
            <span
              style={{
                fontWeight: 800,
                background: `linear-gradient(90deg, ${PURPLE} 0%, #ff5ca8 100%)`,
                WebkitBackgroundClip: "text",
                WebkitTextFillColor: "transparent",
              }}
            >
              üìù ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤
            </span>
            <div
              style={{
                height: 2,
                width: "100%",
                marginTop: 8,
                background: `linear-gradient(90deg, ${PURPLE}, transparent)`,
                opacity: 0.85,
                borderRadius: 999,
              }}
            />
          </div>
        }
      >
        <Form form={form} layout="vertical" onFinish={handleSubmit}>
          <Form.Item
            label="‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
            name="category"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤" }]}
          >
            <Select placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤">
              <Select.Option value="technical">‚öôÔ∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ</Select.Option>
              <Select.Option value="billing">üí≥ ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô</Select.Option>
              <Select.Option value="login">üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö/‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô</Select.Option>
              <Select.Option value="ui">üñ•Ô∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤/‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (UI/UX)</Select.Option>
              <Select.Option value="performance">üöÄ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ä‡πâ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏á</Select.Option>
              <Select.Option value="crash">üí• ‡πÅ‡∏≠‡∏õ‡∏Ñ‡πâ‡∏≤‡∏á/‡πÄ‡∏î‡πâ‡∏á</Select.Option>
              <Select.Option value="purchase">üõí ‡∏ã‡∏∑‡πâ‡∏≠/‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</Select.Option>
              <Select.Option value="content">üì¶ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏≤‡∏¢/‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</Select.Option>
              <Select.Option value="feedback">üí¨ ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞</Select.Option>
              <Select.Option value="other">‚ùì ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</Select.Option>
            </Select>
          </Form.Item>

          <Form.Item
            label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠"
            name="title"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠" }]}
          >
            <Input placeholder="‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö" />
          </Form.Item>

          <Form.Item
            label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
            name="description"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î" }]}
          >
            <Input.TextArea rows={4} placeholder="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô" />
          </Form.Item>

          <Form.Item
            label="‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ / ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô"
            name="attachments"
            valuePropName="fileList"
            getValueFromEvent={(e) => (Array.isArray(e) ? e : e?.fileList)}
          >
            <Upload
              name="attachments"
              listType="picture-card"
              fileList={fileList}
              onPreview={(file) => {
                window.open((file as any).url || (file as any).thumbUrl, "_blank");
              }}
              onChange={({ fileList: fl }) => setFileList(fl)}
              onRemove={(file) => {
                setFileList((prev) => prev.filter((f) => f.uid !== file.uid));
              }}  // ‚úÖ ‡πÅ‡∏Å‡πâ‡∏à‡∏≤‡∏Å })} ‡πÄ‡∏õ‡πá‡∏ô }}
              beforeUpload={(file) => {
                const isImage = file.type?.startsWith("image/");
                if (!isImage) message.error("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
                return false; // ‡πÑ‡∏°‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏°‡∏™‡πà‡∏á‡∏ï‡∏≠‡∏ô submit
              }}
              maxCount={3}
            >
              {fileList.length < 3 && (
                <div
                  style={{
                    background: "#0f0f17",
                    borderRadius: 10,
                    padding: 8,
                    border: `1px dashed ${PURPLE}`,
                    color: "#cfc5ff",
                  }}
                >
                  <UploadOutlined />
                  <div style={{ marginTop: 8 }}>Upload</div>
                </div>
              )}
            </Upload>
          </Form.Item>

          <Form.Item>
            <Button
              type="primary"
              htmlType="submit"
              style={{
                width: "100%",
                height: 46,
                fontWeight: 700,
                borderRadius: 10,
                background: `linear-gradient(90deg, ${PURPLE} 0%, #ff5ca8 100%)`,
                border: "none",
              }}
            >
              ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤
            </Button>
          </Form.Item>
        </Form>
      </Card>
    </div>
  );
}
