import { useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  Card,
  Form,
  Input,
  Button,
  Select,
  Upload,
  message,
} from "antd";
import { UploadOutlined } from "@ant-design/icons";
import { createReport } from "../../services/Report";

export default function ReportPage() {
  const [form] = Form.useForm();
  const [fileList, setFileList] = useState<any[]>([]);
  const navigate = useNavigate();

  // üîß ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô DB ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  //   - ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ user id ‡πÅ‡∏•‡∏∞ game id ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô backend ‡∏à‡∏∞ 404
  const DEFAULT_USER_ID = 1;
  const DEFAULT_GAME_ID = 1;

  const PAGE_BG =
    "linear-gradient(135deg, #0b0a14 0%, #15122a 45%, #1b1740 100%)";
  const PURPLE = "#9254de";
  const PURPLE_LIGHT = "#b388ff";

  const handleSubmit = async (values: any) => {
    try {
      const files: File[] = (fileList || [])
        .map((f: any) => f?.originFileObj)
        .filter(Boolean);

      await createReport({
        title: values.title,
        description: values.description,
        user_id: DEFAULT_USER_ID,
        game_id: DEFAULT_GAME_ID,
        status: "open",
        files,
      });

      message.success("‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
      form.resetFields();
      setFileList([]);

      // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ success ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á
      navigate("/report/success", { state: { title: values.title } });
    } catch (e: any) {
      const apiMsg =
        e?.response?.data?.error ||
        e?.message ||
        "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô";
      message.error(apiMsg);
      // ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢:
      // - user_id / game_id ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô DB ‚Üí ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡πÉ‡∏ä‡πâ id ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏£‡∏¥‡∏á
      // - backend ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö VITE_API_BASE_URL
    }
  };

  return (
    <div
      className="report-page"
      style={{
        width: "100%",
        minHeight: "100vh",
        background: PAGE_BG,
        padding: "40px 16px",
        display: "flex",
        justifyContent: "center",
        alignItems: "flex-start",
        color: "#fff",
      }}
    >
      <style>
        {`
          .report-page .card-title {
            display:flex; align-items:center; gap:8px;
            font-weight:800; letter-spacing:.2px;
            background: linear-gradient(90deg, ${PURPLE} 0%, #ff5ca8 100%);
            -webkit-background-clip:text; -webkit-text-fill-color:transparent;
          }
          .report-page .ant-card {
            background: rgba(15,14,24,.96);
            border-radius: 16px;
            box-shadow: 0 10px 34px rgba(146,84,222,.2), 0 2px 10px rgba(0,0,0,.35);
          }
          .report-page .ant-card-head { border-bottom: 1px solid rgba(146,84,222,.25); }
          .report-page .divider-line {
            height:2px; width:100%; margin-top:8px;
            background: linear-gradient(90deg, ${PURPLE}, transparent); opacity:.85; border-radius:999px;
          }
          .report-page .ant-input,
          .report-page textarea.ant-input,
          .report-page .ant-select-selector {
            background: #0f0f17 !important;
            color: #eae6ff !important;
            border: 1px solid rgba(146,84,222,.35) !important;
            border-radius: 10px !important;
          }
          .report-page .ant-select-selection-item,
          .report-page .ant-select-selection-placeholder { color: #cfc5ff !important; }
          .report-page .ant-select-arrow { color: #e6dbff !important; }
          .report-page .ant-input::placeholder,
          .report-page textarea.ant-input::placeholder { color: #cfc5ff !important; }
          .report-page .ant-input:hover,
          .report-page .ant-input:focus,
          .report-page textarea.ant-input:hover,
          .report-page textarea.ant-input:focus,
          .report-page .ant-select-selector:hover,
          .report-page .ant-select-focused .ant-select-selector {
            border-color: ${PURPLE} !important;
            box-shadow: 0 0 0 2px rgba(146,84,222,.28) !important;
          }
          .report-page .report-select .ant-select-item {
            background: #0f0f17; color: #eae6ff;
          }
          .report-page .report-select .ant-select-item-option-active {
            background: rgba(146,84,222,.25);
          }
          .report-page .ant-upload.ant-upload-select-picture-card {
            background: #0f0f17 !important;
            border: 1px dashed ${PURPLE} !important;
          }
          .report-page .ant-upload.ant-upload-select-picture-card:hover {
            border-color: ${PURPLE_LIGHT} !important;
          }
          .report-page .ant-upload-list-item {
            background: #141322 !important;
            border-color: rgba(146,84,222,.35) !important;
          }
          .report-page .ant-form-item-label > label {
            color: #e9e1ff !important; font-weight: 600;
          }
          .report-page .purple-btn {
            background: linear-gradient(90deg, ${PURPLE} 0%, #ff5ca8 100%);
            border: none; color: #fff;
          }
          .report-page .purple-btn:hover { filter: brightness(1.05); }
        `}
      </style>

      <Card
        bordered={false}
        style={{ width: "100%", maxWidth: 720 }}
        title={
          <div>
            <span className="card-title">üìù ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤</span>
            <div className="divider-line" />
          </div>
        }
      >
        <Form form={form} layout="vertical" onFinish={handleSubmit}>
          <Form.Item
            label="‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
            name="category"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤" }]}
          >
            <Select placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤" popupClassName="report-select">
              <Select.Option value="technical">‚öôÔ∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ</Select.Option>
              <Select.Option value="billing">üí≥ ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô</Select.Option>
              <Select.Option value="login">üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö/‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô</Select.Option>
              <Select.Option value="ui">üñ•Ô∏è ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤/‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (UI/UX)</Select.Option>
              <Select.Option value="performance">üöÄ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏ä‡πâ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏á</Select.Option>
              <Select.Option value="crash">üí• ‡πÅ‡∏≠‡∏õ‡∏Ñ‡πâ‡∏≤‡∏á/‡πÄ‡∏î‡πâ‡∏á</Select.Option>
              <Select.Option value="purchase">üõí ‡∏ã‡∏∑‡πâ‡∏≠/‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</Select.Option>
              <Select.Option value="content">üì¶ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏≤‡∏¢/‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</Select.Option>
              <Select.Option value="feedback">üí¨ ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞</Select.Option>
              <Select.Option value="other">‚ùì ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</Select.Option>
            </Select>
          </Form.Item>

          <Form.Item
            label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠"
            name="title"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠" }]}
          >
            <Input placeholder="‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö" />
          </Form.Item>

          <Form.Item
            label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
            name="description"
            rules={[{ required: true, message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î" }]}
          >
            <Input.TextArea rows={4} placeholder="‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô" />
          </Form.Item>

          <Form.Item
            label="‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ / ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô"
            name="attachments"
            valuePropName="fileList"
            getValueFromEvent={(e) => (Array.isArray(e) ? e : e?.fileList)}
          >
            <Upload
              name="attachments" // ‚úÖ ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö backend
              listType="picture-card"
              fileList={fileList}
              onPreview={(file) => {
                window.open((file as any).url || (file as any).thumbUrl, "_blank");
              }}
              onChange={({ fileList: fl }) => setFileList(fl)}
              onRemove={(file) => {
                setFileList((prev) => prev.filter((f) => f.uid !== file.uid));
              }}
              beforeUpload={(file) => {
                const isImage = file.type?.startsWith("image/");
                if (!isImage) message.error("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô");
                return false; // ‡πÑ‡∏°‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
              }}
              maxCount={3}
            >
              {fileList.length < 3 && (
                <div
                  style={{
                    background: "#0f0f17",
                    borderRadius: 10,
                    padding: 8,
                    border: `1px dashed ${PURPLE}`,
                    color: "#cfc5ff",
                  }}
                >
                  <UploadOutlined />
                  <div style={{ marginTop: 8 }}>Upload</div>
                </div>
              )}
            </Upload>
          </Form.Item>

          <Form.Item>
            <Button
              type="primary"
              htmlType="submit"
              className="purple-btn"
              style={{ width: "100%", height: 46, fontWeight: 700, borderRadius: 10 }}
            >
              ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤
            </Button>
          </Form.Item>
        </Form>
      </Card>
    </div>
  );
}
